(function(window, document, $, undefined) {
    "use strict";

    var $window = $(window),
    $document = $(document);

    // Constructor
    var Sticker = $.Sticker = function(element, options) {
        // Protected variables
        this.protectedVariable = '';

        this.element = element;
        this.$element = $(element);

        // Merge the options
        this.options = $.extend({}, Sticker.defaults, options);

        // Namespacing
        var namespace = this.options.namespace;

        // Class
        this.classes = {};
        this.classes.wrapper = namespace + '-wrapper';
        this.classes.active = namespace + '-active';

        this.components = {};

        var self = this;
        var windowHeight = $window.height(),
          documentHeight = $document.height();
          
        $.extend(self, {
            active: function() {
                self.$element.addClass(self.classes.active);
            },
            scroll: function() {
                var scrollTop = $window.scrollTop(),
                elementTop = self.$wrapper.offset().top;

                if(self.options.topSpace > elementTop){
                  self.options.topSpace = elementTop;
                }
                
                var extra = elementTop - self.options.topSpace - scrollTop;
                if(extra < 0){
                  self.$element.css({
                    position: 'fixed',
                    top: self.options.topSpace
                  });
                }else{
                  self.$element.css({
                    position: '',
                    top: ''
                  });
                }
            },
            resize: function() {

            },
        });

        // Initialization
        this.init();
    };

    // Default options for the plugin as a simple object
    Sticker.defaults = {
        namespace: 'sticker', // String: Prefix string attached to the class of every element generated by the plugin
        topSpace: 0
    };

    Sticker.components = {};
    Sticker.registerComponent = function(name, component) {
        Sticker.components[name] = component;
    };

    Sticker.prototype = {
        constructor: Sticker,

        init: function() {
            var $wrapper = $('<div></div>').addClass(this.classes.wrapper);
            this.$element.wrapAll($wrapper);

            this.$wrapper = this.$element.parent();
            this.$wrapper.css('height', this.$element.outerHeight());

            $window.on('scroll', this.scroll);
            $window.on('resize', this.resize);
        },
        destroy: function() {
            $window.off('scroll', this.scroll);
            $window.off('resize', this.resize);
        }
    };

    Sticker.registerComponent('header', {

    });


    // Collection method.
    $.fn.sticker = function(options) {
        return this.each(function() {
            if (!$.data(this, 'sticker')) {
                $.data(this, 'sticker', new Sticker(this, options));
            }
        });
    };
}(window, document, jQuery));